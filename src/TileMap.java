import java.awt.*;

public class TileMap {
    private Tile[][] map;
    private int[][] mapNum;
    private int[][] mapFunction;
    private int y;
    private int x;
    TileMap() {
        y = 0;
        x = 0;
        mapNum = new int[][]{
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01},
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 01, 04, 04, 04, 04, 01, 04, 04, 04, 04, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 01, 04, 04, 04, 04, 01, 04, 04, 04, 04, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 01, 04, 04, 04, 04, 01, 04, 04, 04, 04, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 01, 04, 04, 04, 04, 01, 04, 04, 04, 04, 01},
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 03, 03, 01, 01, 01, 04, 04, 01, 01, 01, 04, 04, 01, 01},
                {01, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 01},
                {01, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 01},
                {01, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 01},
                {01, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 01},
                {01, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 02, 01},
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 03, 03, 01, 05, 05, 01, 01, 01, 01, 01, 01, 01, 01, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01},
                {01, 03, 03, 03, 03, 03, 03, 03, 03, 03, 03, 01, 05, 05, 05, 05, 05, 05, 05, 05, 05, 05, 01},
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01},
                {01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01, 01}
        };
        map = new Tile[mapNum.length][mapNum[0].length];
        for (int r = 0; r < mapNum.length; r++) {
            for (int c = 0; c < mapNum[r].length; c++) {
                if (mapNum[r][c] == 1) {
                    map[r][c] = new Tile(true, "src/images/01.png", x, y);
                } else if (mapNum[r][c] == 2) {
                    map[r][c] = new Tile(false, "src/images/02.png", x, y);
                } else if (mapNum[r][c] == 3) {
                    map[r][c] = new Tile(false, "src/images/03.png", x, y);
                } else if (mapNum[r][c] == 4) {
                    map[r][c] = new Tile(false,"src/images/04.png", x, y);
                } else if (mapNum[r][c] == 5) {
                    map[r][c] = new Tile(false, "src/images/05.png", x, y);
                }
                x+=32;
            }
            x = 0;
            y+=32;
        }
    }
    public Tile[][] getMap() {
        return map;
    }

    public int[][] getFunction() {
        return mapFunction;
    }
    public void ElevatorUse() {

    }
}
